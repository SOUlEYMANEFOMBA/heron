usethis::use_r("heron")
demi_perimètre=function(a,b,c){
p=(a+b+c)/2
return(p)
}
air_triangle=function(a,b,c){
if (any(is.numeric(c(a,b,c)))=FALSE|any(c(a,b,c))<=0){
air_triangle=function(a,b,c){
if (any(is.numeric(c(a,b,c)))==FALSE|any(c(a,b,c))<=0){
warning("a or b or c is not numeric, zeros , negative")
}else {
p=demi_perimètre(a,b,c)
s=p*(p-a)(p-b)(p-c)
return(sr)
}
}
air_triangle(1,3,4)
air_triangle(1,0,4)
air_triangle=function(a,b,c){
vect=c(a,b,c)
if (any(is.numeric(vect))==FALSE|any(vect)<=0){
warning("a or b or c is not numeric, zeros , negative")
}else {
p=demi_perimètre(a,b,c)
s=p*(p-a)(p-b)(p-c)
return(sr)
}
}
air_triangle(1,0,4)
if (any(is.numeric(vect))|any(vect)<=0){
warning("a or b or c is not numeric, zeros , negative")
}else {
p=demi_perimètre(a,b,c)
s=p*(p-a)(p-b)(p-c)
return(sr)
}
air_triangle=function(a,b,c){
vect=c(a,b,c)
if (any(is.numeric(vect))|any(vect)<=0){
warning("a or b or c is not numeric, zeros , negative")
}else {
p=demi_perimètre(a,b,c)
s=p*(p-a)(p-b)(p-c)
return(sr)
}
}
air_triangle(1,0,4)
air_triangle(1,2,4)
air_triangle=function(a,b,c){
vect=c(a,b,c)
if (any(is.numeric(vect)==FALSE)|any(vect)<=0){
warning("a or b or c is not numeric, zeros , negative")
}else {
p=demi_perimètre(a,b,c)
s=p*(p-a)(p-b)(p-c)
return(sr)
}
}
air_triangle(1,2,4)
air_triangle=function(a,b,c){
vect=c(a,b,c)
if (any(is.numeric(vect)) & any(vect)>0){
p=demi_perimètre(a,b,c)
s=p*(p-a)(p-b)(p-c)
return(s)
}else {
warning("a or b or c is not numeric, zeros , negative")
}
}
air_triangle(1,2,4)
air_triangle=function(a,b,c){
vect=c(a,b,c)
if (is.numeric(vect)==FALSE & any(vect)<= 0){
warning("a or b or c is not numeric, zeros , negative")
}else {
p=demi_perimètre(a,b,c)
s=p*(p-a)(p-b)(p-c)
return(s)
}
}
air_triangle(1,2,4)
demi_perimètre=function(a,b,c){
p=(a+b+c)/2
return(p)
}
air_triangle=function(a,b,c){
vect=c(a,b,c)
if (is.numeric(vect)==FALSE & any(vect)<= 0){
warning("a or b or c is not numeric, zeros , negative")
}else {
p=demi_perimètre(a,b,c)
s=p*(p-a)(p-b)(p-c)
return(s)
}
}
air_triangle(1,2,4)
air_triangle(1,0,4)
air_triangle=function(a,b,c){
vect=c(a,b,c)
if (is.numeric(vect)==FALSE & any(vect)<= 0){
warning("a or b or c is not numeric, zeros , negative")
}else {
p=demi_perimètre(a,b,c)
s=p*(p-a)(p-b)(p-c)
return(sqrt(s))
}
}
air_triangle(1,0,4)
air_triangle=function(a,b,c){
vect=c(a,b,c)
if (is.numeric(vect)==FALSE & vect<= 0){
warning("a or b or c is not numeric, zeros , negative")
}else {
p=demi_perimètre(a,b,c)
s=p*(p-a)(p-b)(p-c)
return(sqrt(s))
}
}
air_triangle(1,0,4)
air_triangle=function(a,b,c){
vect=c(a,b,c)
if (is.numeric(vect)==FALSE & (a<= 0| b<=0 | c<=0)){
warning("a or b or c is not numeric, zeros , negative")
}else {
p=demi_perimètre(a,b,c)
s=p*(p-a)(p-b)(p-c)
return(sqrt(s))
}
}
air_triangle(1,0,4)
air_triangle(1,2,4)
air_triangle=function(a,b,c){
vect=c(a,b,c)
if (is.numeric(vect)==FALSE & (a<= 0| b<=0 | c<=0)){
warning("a or b or c is not numeric, zeros , negative")
}else {
p=demi_perimètre(a,b,c)
s=p(p-a)(p-b)(p-c)
return(sqrt(s))
}
}
air_triangle(1,2,4)
demi_perimètre=function(a,b,c){
p=(a+b+c)/2
return(p)
}
air_triangle=function(a,b,c){
vect=c(a,b,c)
if (is.numeric(vect)==FALSE & (a<= 0| b<=0 | c<=0)){
warning("a or b or c is not numeric, zeros , negative")
}else {
p=demi_perimètre(a,b,c)
s=p(p-a)(p-b)(p-c)
return(sqrt(s))
}
}
air_triangle(1,2,4)
